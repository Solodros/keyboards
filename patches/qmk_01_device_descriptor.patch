diff --git a/tmk_core/protocol/usb_descriptor.c b/tmk_core/protocol/usb_descriptor.c
index 0e2e63ad8e..17f55ef3d3 100644
--- a/tmk_core/protocol/usb_descriptor.c
+++ b/tmk_core/protocol/usb_descriptor.c
@@ -1073,6 +1073,10 @@ const USB_Descriptor_String_t PROGMEM SerialNumberString = {
 
 // clang-format on
 
+__attribute__((weak)) const USB_Descriptor_Device_t* get_usb_device_descriptor_ptr() {
+    return &DeviceDescriptor;
+}
+
 /**
  * This function is called by the library when in device mode, and must be overridden (see library "USB Descriptors"
  * documentation) by the application code so that the address and size of a requested descriptor can be given
@@ -1088,7 +1092,7 @@ uint16_t get_usb_descriptor(const uint16_t wValue, const uint16_t wIndex, const
 
     switch (DescriptorType) {
         case DTYPE_Device:
-            Address = &DeviceDescriptor;
+            Address = get_usb_device_descriptor_ptr();
             Size    = sizeof(USB_Descriptor_Device_t);
 
             break;
diff --git a/tmk_core/protocol/usb_descriptor.h b/tmk_core/protocol/usb_descriptor.h
index 2469990f4d..ba98c358a8 100644
--- a/tmk_core/protocol/usb_descriptor.h
+++ b/tmk_core/protocol/usb_descriptor.h
@@ -295,3 +295,6 @@ enum usb_endpoints {
 #define DIGITIZER_EPSIZE 8
 
 uint16_t get_usb_descriptor(const uint16_t wValue, const uint16_t wIndex, const uint16_t wLength, const void** const DescriptorAddress);
+
+const USB_Descriptor_Device_t* get_usb_device_descriptor_ptr(void);
+extern const USB_Descriptor_Device_t DeviceDescriptor;
