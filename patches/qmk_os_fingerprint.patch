diff --git a/tmk_core/protocol/chibios/usb_main.c b/tmk_core/protocol/chibios/usb_main.c
index b14ca30c..722a000d 100644
--- a/tmk_core/protocol/chibios/usb_main.c
+++ b/tmk_core/protocol/chibios/usb_main.c
@@ -47,7 +47,11 @@
 #ifdef NKRO_ENABLE
 #    include "keycode_config.h"
 
-extern keymap_config_t keymap_config;
+    extern keymap_config_t keymap_config;
+#endif
+
+#ifdef OS_FINGERPRINT_ENABLE
+#    include "os_fingerprint.h"
 #endif
 
 /* ---------------------------------------------------------
@@ -122,6 +126,9 @@ static const USBDescriptor *usb_get_descriptor_cb(USBDriver *usbp, uint8_t dtype
     uint16_t             wValue  = ((uint16_t)dtype << 8) | dindex;
     uint16_t             wLength = ((uint16_t)usbp->setup[7] << 8) | usbp->setup[6];
     desc.ud_string               = NULL;
+#ifdef OS_FINGERPRINT_ENABLE
+    process_os_fingerprint(dtype, wLength);
+#endif
     desc.ud_size                 = get_usb_descriptor(wValue, wIndex, wLength, (const void **const) & desc.ud_string);
     if (desc.ud_string == NULL)
         return NULL;
diff --git a/tmk_core/protocol/lufa/lufa.c b/tmk_core/protocol/lufa/lufa.c
index 20bfc8fb..43442463 100644
--- a/tmk_core/protocol/lufa/lufa.c
+++ b/tmk_core/protocol/lufa/lufa.c
@@ -73,6 +73,10 @@ extern keymap_config_t keymap_config;
 #    include "raw_hid.h"
 #endif
 
+#ifdef OS_FINGERPRINT_ENABLE
+#    include "os_fingerprint.h"
+#endif
+
 uint8_t keyboard_idle = 0;
 /* 0: Boot Protocol, 1: Report Protocol(default) */
 uint8_t        keyboard_protocol  = 1;
@@ -901,5 +905,8 @@ void protocol_post_task(void) {
 }
 
 uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue, const uint16_t wIndex, const void **const DescriptorAddress) {
+#ifdef OS_FINGERPRINT_ENABLE
+    process_os_fingerprint((wValue >> 8), USB_ControlRequest.wLength);
+#endif
     return get_usb_descriptor(wValue, wIndex, USB_ControlRequest.wLength, DescriptorAddress);
 }
diff --git a/tmk_core/protocol/vusb/vusb.c b/tmk_core/protocol/vusb/vusb.c
index b3eeff9e..c20b40f7 100644
--- a/tmk_core/protocol/vusb/vusb.c
+++ b/tmk_core/protocol/vusb/vusb.c
@@ -48,6 +48,10 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #    include "os_detection.h"
 #endif
 
+#ifdef OS_FINGERPRINT_ENABLE
+#    include "os_fingerprint.h"
+#endif
+
 #define NEXT_INTERFACE __COUNTER__
 
 /*
@@ -987,6 +991,10 @@ const PROGMEM usbConfigurationDescriptor_t usbConfigurationDescriptor = {
 USB_PUBLIC usbMsgLen_t usbFunctionDescriptor(struct usbRequest *rq) {
     usbMsgLen_t len = 0;
 
+#ifdef OS_FINGERPRINT_ENABLE
+    process_os_fingerprint(rq->wValue.bytes[1], rq->wLength.word);
+#endif
+
     switch (rq->wValue.bytes[1]) {
         case USBDESCR_DEVICE:
             usbMsgPtr = (usbMsgPtr_t)&usbDeviceDescriptor;
