diff --git a/tmk_core/protocol/chibios/usb_main.c b/tmk_core/protocol/chibios/usb_main.c
index 62a11faff7..9971e5e9d8 100644
--- a/tmk_core/protocol/chibios/usb_main.c
+++ b/tmk_core/protocol/chibios/usb_main.c
@@ -49,6 +49,9 @@
 
 extern keymap_config_t keymap_config;
 #endif
+#ifdef OS_DETECTION_ENABLE
+#    include "os_detection.h"
+#endif
 
 /* ---------------------------------------------------------
  *       Global interface variables and declarations
@@ -113,6 +116,9 @@ static const USBDescriptor *usb_get_descriptor_cb(USBDriver *usbp, uint8_t dtype
     static USBDescriptor desc;
     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
     desc.ud_string              = NULL;
+#ifdef OS_DETECTION_ENABLE
+    process_os_detection(dtype, ((uint16_t)usbp->setup[7] << 8) | usbp->setup[6]);
+#endif
     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud_string);
     if (desc.ud_string == NULL)
         return NULL;
diff --git a/tmk_core/protocol/lufa/lufa.c b/tmk_core/protocol/lufa/lufa.c
index 8f36e02b9a..c426917232 100644
--- a/tmk_core/protocol/lufa/lufa.c
+++ b/tmk_core/protocol/lufa/lufa.c
@@ -73,6 +73,10 @@ extern keymap_config_t keymap_config;
 #    include "raw_hid.h"
 #endif
 
+#ifdef OS_DETECTION_ENABLE
+#    include "os_detection.h"
+#endif
+
 uint8_t keyboard_idle = 0;
 /* 0: Boot Protocol, 1: Report Protocol(default) */
 uint8_t        keyboard_protocol  = 1;
@@ -901,5 +905,8 @@ void protocol_post_task(void) {
 }
 
 uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue, const uint16_t wIndex, const void **const DescriptorAddress) {
+#ifdef OS_DETECTION_ENABLE
+    process_os_detection((wValue >> 8), USB_ControlRequest.wLength);
+#endif
     return get_usb_descriptor(wValue, wIndex, DescriptorAddress);
 }
diff --git a/tmk_core/protocol/vusb/vusb.c b/tmk_core/protocol/vusb/vusb.c
index 2d17761978..b1bc58a12e 100644
--- a/tmk_core/protocol/vusb/vusb.c
+++ b/tmk_core/protocol/vusb/vusb.c
@@ -44,6 +44,10 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #    include "ring_buffer.h"
 #endif
 
+#ifdef OS_DETECTION_ENABLE
+#    include "os_detection.h"
+#endif
+
 #define NEXT_INTERFACE __COUNTER__
 
 /*
@@ -983,6 +987,10 @@ const PROGMEM usbConfigurationDescriptor_t usbConfigurationDescriptor = {
 USB_PUBLIC usbMsgLen_t usbFunctionDescriptor(struct usbRequest *rq) {
     usbMsgLen_t len = 0;
 
+#ifdef OS_DETECTION_ENABLE
+    process_os_detection(rq->wValue.bytes[1], rq->wLength.word);
+#endif
+
     switch (rq->wValue.bytes[1]) {
         case USBDESCR_DEVICE:
             usbMsgPtr = (usbMsgPtr_t)&usbDeviceDescriptor;
