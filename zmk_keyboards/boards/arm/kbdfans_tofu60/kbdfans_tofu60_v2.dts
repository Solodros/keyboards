/*
 * Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;

#include <rpi_pico/rp2040.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

#if __has_include(<transform/kbdfans_tofu60_v2-transform-option.h>)
#include <transform/kbdfans_tofu60_v2-transform-option.h>
#else

/*
 * selec option
 *  0=deselect
 *  1=select
 */
#define SPLIT_BS 0
#define ISO_ENTER 0
#define SPLIT_LEFT_SHIFT 0
#define SPLIT_RIGHT_SHIFT 0

/*
 * options for bootom row
 */
#define BOTTOM_ROW_ANSI 0
#define BOTTOM_ROW_TSANGAN 1
#define BOTTOM_ROW_HHKB 2
#define BOTTOM_ROW_WKL 3

/*
 * choice of the options for bottom row
 */
#define BOTTOM_ROW BOTTOM_ROW_ANSI

#endif

/ {
    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,console = &cdc_acm_uart;
        zephyr,shell-uart = &cdc_acm_uart;
        zephyr,code-partition = &code_partition;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    xtal_clk: xtal-clk {
        compatible = "fixed-clock";
        clock-frequency = <12000000>;
        #clock-cells = <0>;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <5>;
        map = <
        // row 0
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12)
#if SPLIT_BS
        RC(2,12)
#endif
        RC(0,13)

        // row 1
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12)
#if !ISO_ENTER
        RC(1,13)
#endif
        // row 2
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
#if ISO_ENTER
        RC(1,13)
#endif
        RC(2,13)

        // row 3
        RC(3,0)
#if SPLIT_LEFT_SHIFT
        RC(3,1)
#endif
        RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12)
#if SPLIT_RIGHT_SHIFT
        RC(3,13)
#endif

        // row 4
#if BOTTOM_ROW == BOTTOM_ROW_ANSI
        RC(4,0) RC(4,1) RC(4,2) RC(4,7) RC(4,10) RC(4,11) RC(4,12) RC(4,13)
#elif BOTTOM_ROW == BOTTOM_ROW_TSANGAN
        RC(4,0) RC(4,1) RC(4,2) RC(4,7) RC(4,11) RC(4,12) RC(4,13)
#elif BOTTOM_ROW == BOTTOM_ROW_HHKB
        RC(4,1) RC(4,2) RC(4,7) RC(4,11) RC(4,12)
#elif BOTTOM_ROW == BOTTOM_ROW_WKL
        RC(4,0) RC(4,2) RC(4,7) RC(4,11) RC(4,13)
#endif
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";

        diode-direction = "col2row";
        row-gpios
        = <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;
        col-gpios
        = <&gpio0 2 GPIO_ACTIVE_HIGH>
        , <&gpio0 9 GPIO_ACTIVE_HIGH>
        , <&gpio0 10 GPIO_ACTIVE_HIGH>
        , <&gpio0 11 GPIO_ACTIVE_HIGH>
        , <&gpio0 12 GPIO_ACTIVE_HIGH>
        , <&gpio0 13 GPIO_ACTIVE_HIGH>
        , <&gpio0 14 GPIO_ACTIVE_HIGH>
        , <&gpio0 15 GPIO_ACTIVE_HIGH>
        , <&gpio0 18 GPIO_ACTIVE_HIGH>
        , <&gpio0 19 GPIO_ACTIVE_HIGH>
        , <&gpio0 20 GPIO_ACTIVE_HIGH>
        , <&gpio0 21 GPIO_ACTIVE_HIGH>
        , <&gpio0 22 GPIO_ACTIVE_HIGH>
        , <&gpio0 23 GPIO_ACTIVE_HIGH>
        ;
    };

    leds {
	    compatible = "gpio-leds";
	    caps_lock_led: caps_lock_led {
		    gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
		    label = "CAPS_LOCK_LED";
	    };
    };
};

/* TODO actual flash size? */
&flash0 {
    reg = <0x10000000 DT_SIZE_M(16)>;

    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* Reserved memory for the second stage bootloader */
        second_stage_bootloader: partition@0 {
            label = "second_stage_bootloader";
            reg = <0x00000000 0x100>;
            read-only;
        };

        /*
         * Usable flash. Starts at 0x100, after the bootloader. The partition
         * size is 16MB minus the 0x100 bytes taken by the bootloader.
         */
        code_partition: partition@100 {
            label = "code";
            reg = <0x100 (DT_SIZE_M(16) - 0x100)>;
            read-only;
        };
    };
};


&usbd {
    status = "okay";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};


&gpio0 {
    status = "okay";
};
