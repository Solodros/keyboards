/*
* Copyright (c) 2023 The ZMK Contributors
* SPDX-License-Identifier: MIT
*/

/dts-v1/;

#include <st/f1/stm32f103Xb.dtsi>
#include <st/f1/stm32f103c(8-b)tx-pinctrl.dtsi>
// #include <zephyr/dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

/ {

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,console = &cdc_acm_uart;
        zephyr,shell-uart = &cdc_acm_uart;
        zephyr,code-partition = &code_partition;
        zmk,matrix_transform = &default_transform;
        zmk,kscan = &kscan0;
        /* TODO */
        // zmk,underglow = &led_strip;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <15>;
        rows = <5>;
        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)          RC(2,13) RC(2,14)
        RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10)          RC(3,12) RC(3,13) RC(3,14)
        RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                         RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13) RC(4,14)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        row-gpios
        = <&gpiob 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;
        col-gpios
        = <&gpioa 4 GPIO_ACTIVE_HIGH>
        , <&gpioa 5 GPIO_ACTIVE_HIGH>
        , <&gpioa 6 GPIO_ACTIVE_HIGH>
        , <&gpioa 7 GPIO_ACTIVE_HIGH>
        , <&gpiob 0 GPIO_ACTIVE_HIGH>
        , <&gpiob 1 GPIO_ACTIVE_HIGH>
        , <&gpiob 10 GPIO_ACTIVE_HIGH>
        , <&gpiob 11 GPIO_ACTIVE_HIGH>
        , <&gpiob 12 GPIO_ACTIVE_HIGH>
        , <&gpiob 13 GPIO_ACTIVE_HIGH>
        , <&gpiob 14 GPIO_ACTIVE_HIGH>
        , <&gpiob 15 GPIO_ACTIVE_HIGH>
        , <&gpioa 8 GPIO_ACTIVE_HIGH>
        , <&gpioa 9 GPIO_ACTIVE_HIGH>
        , <&gpioa 10 GPIO_ACTIVE_HIGH>
        ;
    };

    /*
    * TODO zephyr's gpio dirver is supported only for SOC_SERIES_NRF51X
    */
    /*
	led_strip: ws2812 {
		compatible = "worldsemi,ws2812-gpio";
		chain-length = <110>; // matrix 70 + underglow 40
		color-mapping = <LED_COLOR_ID_GREEN	LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
		in-gpios = <&gpioa 15 GPIO_ACTIVE_HIGH>;
	};
    */
};

&pinctrl {
    /*
    * Configures number of pins assigned to the SWJ debug port.
    *
    *    * full         - Full SWJ (JTAG-DP + SW-DP).
    *    * no-njtrst    - Full SWJ (JTAG-DP + SW-DP) but without NJTRST.
    *                     Releases: PB4.
    *    * jtag-disable - JTAG-DP Disabled and SW-DP Enabled.
    *                     Releases: PA15 PB3 PB4.
    *    * disable      - JTAG-DP Disabled and SW-DP Disabled.
    *                     Releases: PA13 PA14 PA15 PB3 PB4.
    *
    *  If absent, then Full SWJ (JTAG-DP + SW-DP) is used (reset state).
    */
    swj-cfg = "jtag-disable";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&pll {
	mul = <9>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(72)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <2>;
	apb2-prescaler = <1>;
	status = "okay";
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /*
        * uf2-stm32f103 bootloader
        * https://github.com/mmoskal/uf2-stm32f103
        */
        boot_partition: partition@0 {
            label = "bootloader";
            reg = <0x0 DT_SIZE_K(16)>;
            read-only;
        };

        code_partition: partition@4000 {
            label = "code";
            reg = <DT_SIZE_K(16) (DT_SIZE_K(128) - DT_SIZE_K(16) - DT_SIZE_K(8))>;
            read-only;
        };

        /*
        * Set 8Kb of storage at the end of the 128Kb of flash
        */
        storage_partition: partition@1e000 {
            label = "storage";
            reg = <(DT_SIZE_K(128) - DT_SIZE_K(8)) DT_SIZE_K(8)>;
        };
    };
};

&usb {
	status = "okay";
	pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
	pinctrl-names = "default";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};

/*
* TODO PWM driver for ws2812 RGB LEDs
*/
/*
&timers2 {
    status = "okay";
    pwm2: pwm {
        status = "okay";
        pinctrl-0 = <&tim2_ch1_remap1_pwm_pa15>;
        pinctrl-names = "default";
    };
};
*/
