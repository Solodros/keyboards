#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

// common layers

#define _MAC_BASE_LAYER 0
#define _WIN_BASE_LAYER 1
#define _HHKB_FN_LAYER 2
#define _APPLE_FN_LAYER 3
#define _WIN_FN_LAYER 4
#define _SETTING_LAYER 5

// key definitions other than kp/trans behavior

// keychron DIP SW
// off: mac base layer
// on: win base layer
#define _DIP_SW &mo _WIN_BASE_LAYER

// select mac base layer
// normal: mac
// +shift: win
#define _MAC_WIN &mac_win

// Left Opt on mac base layer for HHKB layout
// single: Left Option
// double: fn/globe with momentaly apple fn layer
#define _H_M_LOPT &hhkb_mac_l_opt

// Left Opt on mac base layer for HHKB layout
// single: Left Option
// double: momentary win fn layer
#define _H_W_LOPT &hhkb_win_l_opt

// Left Command
// tap: LANG2(英数)
// hold: Left Command
#define _LCMD &mt LCMD LANG2

// Right Command
// tap: LANG1(かな)
// hold: Left Command
#define _RCMD &mt LCMD LANG1

// Right Opt for HHKB layout
// single: Right Option
// double: Momentaly setting layer
#define _H_ROPT &hhkb_r_opt

// HHKB fn
#define _H_FN &mo _HHKB_FN_LAYER

// Fn/Globe key with momnetary Apple Fn Layer
#define _A_FN &fn_globe

// Fn/Globe key on win base layer
#define _W_FN &mo _WIN_FN_LAYER

// APP key for ANSI layout
// single: APP
// double: Momentaly setting layer
#define _APP &ansi_app

// Spotlight key on apple fn Layer
#define _SPOTLIGHT &fn_c C_AC_SEARCH

// Dictation key on apple fn Layer
#define _DICTATION &fn_c C_VOICE_COMMAND

// Emulate fn/globe shortcut keys for windows
// F1 : decrease brightness
// F2 : decrease brightness
// F3 : mission cntrol
// F4 : spotlight
// F5 : dictation, long press for "Hey Siri"
// F6 : do not disturb TODO
// F7 : media prev
// F8 : media play/pause
// F9 : media next
// F10 : mute audio
// F11 : decrease audio volume
// F12 : increase audio volume
// SPC : Hey Siri TODO
// Q : Quck Notes
// E : Emoji & Symbols
// A : Focus Dock
// F : Full Screen Mode
// H : Show Desktop
// C : Show Control Center
// N : Show Notification
// M : Focus Menubar
// Backspace : Delete
#define _FN_F1 &kp C_BRI_DN
#define _FN_F2 &kp C_BRI_UP
#define _FN_F3 &kp RG(TAB)
#define _FN_F4 &kp RA(SPC)
#define _FN_F5 &kp RG(H)
#define _FN_F6 &kp F6
#define _FN_F7 &kp C_PREV
#define _FN_F8 &kp C_PP
#define _FN_F9 &kp C_NEXT
#define _FN_F10 &kp C_MUTE
#define _FN_F11 &kp C_VOL_DN
#define _FN_F12 &kp C_VOL_UP
#define _FN_SPC &kp SPC
#define _FN_Q &kp RG(RA(N))
#define _FN_E &kp RG(DOT)
#define _FN_A &kp RG(B)
#define _FN_F &kp F11
#define _FN_H &kp RG(COMMA)
#define _FN_C &kp RG(A)
#define _FN_N &kp RG(N)
#define _FN_M &kp RALT
#define _FN_BS &kp DEL

// select output
#define _BT1 &ble 0
#define _BT2 &ble 1
#define _BT3 &ble 2
#define _BT4 &ble 3
#define _BT5 &ble 4
#define _BT_CLR &bt BT_CLR
#define _USB &out OUT_USB

/ {
  behaviors {
    // Left Option key on mac base layer for HHKB layout
    // single -> LALT
    // double -> APPLE_FNn + MO(1)
    /omit-if-no-ref/ hhkb_mac_l_opt: hhkb_mac_l_opt {
      compatible = "zmk,behavior-tap-dance";
      label = "HHKB_MAC_LEFT_OPT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LALT>, <&fn_globe>;
    };
    // Left Option key on win base layer for HHKB layout
    // single -> LALT
    // double -> MO(1)
    /omit-if-no-ref/ hhkb_win_l_opt: hhkb_win_l_opt {
      compatible = "zmk,behavior-tap-dance";
      label = "HHKB_WIN_LEFT_OPT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LALT>, <&mo _WIN_FN_LAYER>;
    };
    // single -> RALT
    // double -> MO(3)
    /omit-if-no-ref/ hhkb_r_opt: hhkb_r_opt {
      compatible = "zmk,behavior-tap-dance";
      label = "HHKB_RIGHT_OPT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp RALT>, <&mo _SETTING_LAYER>;
    };
    // single -> APP
    // double -> MO(3)
    /omit-if-no-ref/ ansi_app: ansi_app {
      compatible = "zmk,behavior-tap-dance";
      label = "ANSI_APP";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp K_APP>, <&mo _SETTING_LAYER>;
    };
    /omit-if-no-ref/ ota_bootloader: ota_bootloader {
      compatible = "zmk,behavior-reset";
      label = "OTA_BOOTLOADER";
      type = <0xA8>;
      #binding-cells = <0>;
    };
    /omit-if-no-ref/ mac_win: switch_mac_win {
      compatible = "zmk,behavior-mod-morph";
      label = "SWITCH_MAC_WIN";
      #binding-cells = <0>;
      bindings = <&to _MAC_BASE_LAYER>, <&to _WIN_BASE_LAYER>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  macros {
    // Select BT profile & output
    // param_1: index number(0-4) of bt profile
    /omit-if-no-ref/ ble: ble {
      label = "SELECT_BT_PROFILE_OUTPUT";
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      bindings
      = <&macro_press &out OUT_BLE>
      , <&macro_param_1to2>
      , <&macro_press &bt BT_SEL MACRO_PLACEHOLDER>
      , <&macro_pause_for_release>
      , <&macro_release &out OUT_BLE>
      , <&macro_param_1to2>
      , <&macro_release &bt BT_SEL MACRO_PLACEHOLDER>
      ;
    };
    // fn/globe key with momentaly apple fn layer
    /omit-if-no-ref/ fn_globe: fn_globe {
      label = "FN_GLOBE_MO_FN_LAYER";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
      = <&macro_press &mo _APPLE_FN_LAYER &kp APPLE_FN>
      , <&macro_pause_for_release>
      , <&macro_release &mo _APPLE_FN_LAYER &kp APPLE_FN>
      ;
    };
    // send cnsumer key with temporarily releasing fn/globe
    //  *some consumer keys dosen't work with fn/globe key
    // param_1: consumer keycode
    /omit-if-no-ref/ fn_c: fn_c {
      label = "SEND_CONSUMER_KEY_WHEN_FN_GLOBE_IS_HELD";
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      bindings
      = <&macro_release &kp APPLE_FN>
      , <&macro_param_1to1>
      , <&macro_press &kp MACRO_PLACEHOLDER>
      , <&macro_press &kp APPLE_FN>
      , <&macro_pause_for_release>
      , <&macro_param_1to1>
      , <&macro_release &kp MACRO_PLACEHOLDER>
      ;
    };
  };
};
